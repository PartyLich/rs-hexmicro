var searchIndex={};
searchIndex["hex_microservice"] = {"doc":"Hexagonal microservice example","i":[[0,"api","hex_microservice","`api` defines an http adapter for a url shortening service.",null,null],[3,"Handler","hex_microservice::api","A concrete implementation of the `RedirectHandler` interface",null,null],[8,"RedirectHandler","","Provides methods for driving a url shortening service",null,null],[10,"get","","Handle GET requests for shortened Url redirects",0,[[["string"],["self"]],[["box",["reply"]],["reply"]]]],[10,"post","","Handle POST requests to create shorteneed Urls",0,[[["string"],["self"],["bytes"]],[["box",["reply"]],["reply"]]]],[11,"new","","Creates an instance of the `Handler` type",1,[[["box",["redirectservice"]],["redirectservice"]],["handler"]]],[0,"repository","hex_microservice","`repository` provides concrete implementations of the…",null,null],[3,"MongoRepository","hex_microservice::repository","A Mongo backed `RedirectRepository` object",null,null],[3,"RedisRepository","","A Redis backed `RedirectRepository` object",null,null],[11,"new","","Creates an instance of `RedirectRepository` backed by…",2,[[["str"]],[["box",["error"]],["result",["box","box"]],["box",["mongorepository"]]]]],[11,"new","","Create an instance of RedirectRepository backed by Redis",3,[[["str"]],[["box",["redisrepository"]],["box",["error"]],["result",["box","box"]]]]],[0,"serializer","hex_microservice","`serializer` provides concrete implementations of the…",null,null],[3,"JsonSerializer","hex_microservice::serializer","A concrete implementation of the `RedirectSerializer`…",null,null],[3,"MsgpackSerializer","","A concrete implementation of the `RedirectSerializer`…",null,null],[0,"short_url","hex_microservice","`short_url` defines the domain logic and ports for a url…",null,null],[3,"Redirect","hex_microservice::short_url","A URL redirect model",null,null],[12,"created_at","","Creation timestamp",4,null],[12,"code","","Lookup key",4,null],[12,"url","","Destination Url",4,null],[3,"Service","","A URL redirect service",null,null],[0,"error","","Define custom `Error` types for the short url domain",null,null],[4,"RedirectErr","hex_microservice::short_url::error","An enumeration of the possible error types the url…",null,null],[13,"NotFound","","`Redirect` with the specified short code could not be…",5,null],[13,"Invalid","","Invalid data/request/etc according to context",5,null],[13,"ServerErr","","Generic catch all error",5,null],[8,"RedirectRepository","hex_microservice::short_url","Provides a `find` method for looking up URLs based on…",null,null],[10,"find","","Retrieve a URL from the repo based on its short code",6,[[["str"],["self"]],[["result",["redirect","redirecterr"]],["redirect"],["redirecterr"]]]],[10,"store","","Save a `Redirect` object to the repository",6,[[["self"],["redirect"]],[["result",["redirecterr"]],["redirecterr"]]]],[8,"RedirectSerializer","","Provides methods to serialize and deserialize `Redirect`…",null,null],[10,"encode","","Encode a `Redirect` to the serialization format (as a byte…",7,[[["self"],["redirect"]],[["result",["vec","box"]],["vec",["u8"]],["box",["error"]]]]],[10,"decode","","Decode the serialization format (as a byte sequence) into…",7,[[["self"],["vec"]],[["result",["redirect","box"]],["redirect"],["box",["error"]]]]],[8,"RedirectService","","Provides a `find` method for looking up URLs based on…",null,null],[10,"find","","Retrieves a `Redirect` based on its short code",8,[[["str"],["self"]],[["result",["redirect","redirecterr"]],["redirect"],["redirecterr"]]]],[10,"store","","Save a `Redirect`",8,[[["self"],["redirect"]],[["result",["redirect","redirecterr"]],["redirect"],["redirecterr"]]]],[11,"new","","Creates an instance of the `RedirectService` interface",9,[[["box",["redirectrepository"]],["redirectrepository"]],["self"]]],[11,"from","hex_microservice::api","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","hex_microservice::repository","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","hex_microservice::serializer","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","hex_microservice::short_url","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","hex_microservice::short_url::error","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"as_fail","","",5,[[["self"]],["fail"]]],[11,"get","hex_microservice::api","Redirect to stored url",1,[[["string"],["self"]],[["box",["reply"]],["reply"]]]],[11,"post","","Create short code for url redirect",1,[[["string"],["self"],["bytes"]],[["box",["reply"]],["reply"]]]],[11,"find","hex_microservice::repository","Look up URL based on its short code",2,[[["str"],["self"]],[["redirecterr"],["result",["redirect","redirecterr"]],["redirect"]]]],[11,"store","","Save `Redirect` object to the repository",2,[[["self"],["redirect"]],[["result",["redirecterr"]],["redirecterr"]]]],[11,"find","","Look up URL based on its short code",3,[[["str"],["self"]],[["redirecterr"],["result",["redirect","redirecterr"]],["redirect"]]]],[11,"store","","Save Redirect object",3,[[["self"],["redirect"]],[["result",["redirecterr"]],["redirecterr"]]]],[11,"encode","hex_microservice::serializer","Converts a `Redirect` to a JSON byte sequence",10,[[["self"],["redirect"]],[["result",["vec","box"]],["vec",["u8"]],["box",["error"]]]]],[11,"decode","","Converts a JSON byte sequence to a `Redirect`",10,[[["self"],["vec"]],[["result",["redirect","box"]],["redirect"],["box",["error"]]]]],[11,"encode","","Converts a `Redirect` to a MessagePack byte sequence",11,[[["self"],["redirect"]],[["result",["vec","box"]],["vec",["u8"]],["box",["error"]]]]],[11,"decode","","Converts a MessagePack byte sequence to a `Redirect`",11,[[["self"],["vec"]],[["result",["redirect","box"]],["redirect"],["box",["error"]]]]],[11,"find","hex_microservice::short_url","Retrieves URLs based on their short code",9,[[["str"],["self"]],[["result",["redirect","redirecterr"]],["redirect"],["redirecterr"]]]],[11,"store","","Saves `Redirect` objects",9,[[["self"],["redirect"]],[["result",["redirect","redirecterr"]],["redirect"],["redirecterr"]]]],[11,"from","hex_microservice::short_url::error","",5,[[["error"]],["redirecterr"]]],[11,"from","","",5,[[["decodererror"]],["redirecterr"]]],[11,"from","","",5,[[["encodererror"]],["redirecterr"]]],[11,"from","","",5,[[["rediserror"]],["redirecterr"]]],[11,"from","","",5,[[["parseinterror"]],["redirecterr"]]],[11,"clone","","",5,[[["self"]],["redirecterr"]]],[11,"eq","","",5,[[["redirecterr"],["self"]],["bool"]]],[11,"eq","hex_microservice::short_url","",4,[[["self"],["redirect"]],["bool"]]],[11,"ne","","",4,[[["self"],["redirect"]],["bool"]]],[11,"fmt","hex_microservice::repository","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","hex_microservice::short_url::error","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","hex_microservice::short_url","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","hex_microservice::short_url::error","",5,[[["formatter"],["self"]],["result"]]],[11,"source","","",5,[[["self"]],[["option",["error"]],["error"]]]],[11,"serialize","hex_microservice::short_url","",4,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",4,[[["__d"]],["result"]]]],"p":[[8,"RedirectHandler"],[3,"Handler"],[3,"MongoRepository"],[3,"RedisRepository"],[3,"Redirect"],[4,"RedirectErr"],[8,"RedirectRepository"],[8,"RedirectSerializer"],[8,"RedirectService"],[3,"Service"],[3,"JsonSerializer"],[3,"MsgpackSerializer"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);